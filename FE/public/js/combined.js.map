{"version":3,"sources":["node_modules/browser-pack/_prelude.js","serverConfig.js","views/Account/accountController.js","views/Authorized/AuthorizedController.js","views/Authorized/AuthorizedService.js","views/DataAccess/dataAccessControllers.js","views/DataAccess/dataAccessServices.js","views/PageSelector/pageSelectorController.js","views/app.js","views/config/httpConfig.js","views/config/routes.js","views/index/indexController.js","views/index/indexServices.js","views/shared/accountService.js","views/shared/authInterceptor.js","views/shared/authStateService.js","views/shared/requestBuffer.js","views/shared/restService.js"],"names":[],"mappings":"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","file":"combined.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","exports.frontendConfig = {\r\n    protocol: \"http\",\r\n    domain: \"localhost.com\",\r\n    port: 8000,\r\n    baseUrl: () => exports.frontendConfig.protocol + \"://\" + exports.frontendConfig.domain + \":\" + exports.frontendConfig.port\r\n};\r\n\r\nexports.backendConfig = {\r\n    protocol: \"http\",\r\n    domain: \"localhost\",\r\n    port: 12345,\r\n    baseUrl: () => exports.backendConfig.protocol + \"://\" + exports.backendConfig.domain + \":\" + exports.backendConfig.port\r\n};\r\n\r\n//this will be shared across node and ng, so module won't exist on ng\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = {\r\n        frontendConfig: exports.frontendConfig,\r\n        backendConfig: exports.backendConfig\r\n    };\r\n}","export class AccountController {\r\n    constructor(accountService) {\r\n        this.accountService = accountService;\r\n        this.registerModel = new RegisterModel();\r\n        this.loginModel = new LoginModel();\r\n        this.lastResponse = null;\r\n        this.isLoggedIn = this.accountService.isLoggedIn();\r\n        this.currentUser = accountService.currentUser;\r\n        this.roleName = \"\";\r\n    }\r\n\r\n    login(loginModel) {\r\n        this.accountService.login(loginModel.userName, loginModel.password)\r\n            .then(response => {\r\n                this.lastResponse = \"login successful\";\r\n                this.isLoggedIn = this.accountService.isLoggedIn();\r\n                this.currentUser = this.accountService.currentUser;\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            })\r\n    }\r\n\r\n    getRoles() {\r\n        if (!this.currentUser) return;\r\n        this.accountService.getRoles(this.currentUser.userName)\r\n            .then(roles => {\r\n                this.lastResponse = \"get roles successful\";\r\n                this.currentUser.roles = roles;\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            });\r\n    }\r\n\r\n    addRole(roleName) {\r\n        if (!this.currentUser) return;\r\n        this.accountService.addRole(this.currentUser.userName, roleName)\r\n            .then(roles => {\r\n                this.lastResponse = \"add role successful\";\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            });\r\n    }\r\n\r\n    removeRole(roleName) {\r\n        if (!this.currentUser) return;\r\n        this.accountService.removeRole(this.currentUser.userName, roleName)\r\n            .then(roles => {\r\n                this.lastResponse = \"remove role successful\";\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            });\r\n    }\r\n\r\n    logout(){\r\n        this.accountService.logout();\r\n        this.isLoggedIn = this.accountService.isLoggedIn();\r\n    }\r\n\r\n    register(registerModel) {\r\n        this.accountService.register(registerModel.userName, registerModel.password, registerModel.confirmPassword)\r\n            .then(response => {\r\n                this.lastResponse = \"registration successful\";\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            })\r\n    }\r\n}\r\n\r\nclass LoginModel {\r\n    constructor() {\r\n        this.userName = \"\";\r\n        this.password = \"\";\r\n    }\r\n}\r\n\r\nclass RegisterModel extends LoginModel {\r\n    constructor() {\r\n        super();\r\n        this.confirmPassword = \"\";\r\n    }\r\n}","export class AuthorizedController {\r\n    constructor(usersService) {\r\n        this.usersService = usersService;\r\n        this.users = [];\r\n        this.text = null;\r\n        this.lastResponse = null;\r\n    }\r\n\r\n    getUsers() {\r\n        this.usersService.get()\r\n            .then(users => {\r\n                console.log(users);\r\n                this.users = users;\r\n                this.lastResponse = \"got users\";\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            });\r\n    }\r\n\r\n    adminFunction(text) {\r\n        this.usersService.adminFunction(text)\r\n            .then(response => {\r\n                this.lastResponse = response;\r\n            })\r\n            .catch(response => {\r\n                this.lastResponse = response;\r\n            });\r\n    }\r\n}","import {RestServiceBase, ViewModelBase, ApiModelBase} from \"../shared/restService\";\r\n\r\nexport class UsersService extends RestServiceBase {\r\n    constructor($http, $q) {\r\n        super($http, $q, \"Users\");\r\n    }\r\n\r\n    toViewModel(apiModel) {\r\n        return UserViewModel.fromApiModel(apiModel);\r\n    };\r\n\r\n    toApiModel(viewModel) {\r\n        return viewModel\r\n    };\r\n\r\n    adminFunction(text) {\r\n        console.log(\"text received\");\r\n        console.log(text);\r\n        var deferred = this.$q.defer();\r\n        this.$http.post(this.apiUrl + \"/AdminFunction\", {Text: text})\r\n            .then((response) => {\r\n                console.log(\"successfully ran admin function\");\r\n                deferred.resolve(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"data service error\");\r\n                console.log(error);\r\n                deferred.reject(error);\r\n            });\r\n        return deferred.promise;\r\n    }\r\n}\r\n\r\nclass UserViewModel extends ViewModelBase {\r\n    constructor(id, userName) {\r\n        super(id);\r\n        this.userName = userName;\r\n        this.roles = [];\r\n    }\r\n\r\n    static fromApiModel(apiModel){\r\n        return new UserViewModel(apiModel.Id, apiModel.UserName);\r\n    }\r\n}","export class DataAccessController {\r\n    constructor(valuesService) {\r\n        this.valuesService = valuesService;\r\n        this.values = [];\r\n        this.error = null;\r\n        this.method = \"GET\";\r\n        this.id = null;\r\n        this.value = null;\r\n    }\r\n\r\n    init() {\r\n        //here is where you'd initialize the controller if initialization had to occur\r\n    }\r\n\r\n    get(id = null) {\r\n        this.valuesService.get(id)\r\n            .then(values => this.values = values)\r\n            .catch(error => this.error = error);\r\n    }\r\n\r\n    post(viewModel) {\r\n        this.valuesService.post(viewModel)\r\n            .then(value => this.values.push(value))\r\n            .catch(error => this.error = error);\r\n    }\r\n\r\n    put(viewModel) {\r\n        this.valuesService.put(viewModel)\r\n            .catch(error => this.error = error);\r\n    }\r\n\r\n    delete(viewModel) {\r\n        this.valuesService.post(viewModel)\r\n            .then(value => this.values = this.values.filter(v => v.id !== viewModel.id))\r\n            .catch(error => this.error = error);\r\n    }\r\n}","import {RestServiceBase, ViewModelBase, ApiModelBase} from \"../shared/restService\";\r\n\r\nexport class ValuesService extends RestServiceBase {\r\n    constructor($http, $q) {\r\n        super($http, $q, \"Values\");\r\n    }\r\n\r\n    toViewModel(apiModel) {\r\n        return ValueViewModel.fromApiModel(apiModel);\r\n    };\r\n\r\n    toApiModel(viewModel) {\r\n        return viewModel\r\n    };\r\n}\r\n\r\nclass ValueViewModel extends ViewModelBase {\r\n    constructor(id, name){\r\n        super(id);\r\n        this.name = name;\r\n    }\r\n\r\n    static fromApiModel(apiModel) {\r\n        return new ValueViewModel(apiModel.Id, apiModel.Name);\r\n    }\r\n}","class Page{\r\n    constructor(name, route, description){\r\n        this.name = name;\r\n        this.route = route;\r\n        this.description = description;\r\n    }\r\n}\r\n\r\nexport class PageSelectorController {\r\n    constructor($state) {\r\n        this.$state = $state;\r\n        this.selectedPage = null;\r\n        this.pages = [\r\n            new Page(\"Index\", \"pageSelector.index\", \"Shows the usage of ng-options and filtering\"),\r\n            new Page(\"Data Access\", \"pageSelector.dataAccess\", \"Shows the usage of a base REST service with babel\"),\r\n            new Page(\"Account\", \"pageSelector.account\", \"Logs into or registers user accounts\"),\r\n            new Page(\"Authorized\", \"pageSelector.authorized\", \"Performs a sample action which requires authorization and authentication\")\r\n        ];\r\n    }\r\n\r\n    go(selectedPage) {\r\n        this.$state.go(selectedPage.route);\r\n    }\r\n}","import {routes} from \"./config/routes\";\r\nimport {httpConfig} from \"./config/httpConfig\";\r\nimport {AccountController} from \"./Account/accountController\";\r\nimport {AuthorizedController} from \"./Authorized/AuthorizedController\";\r\nimport {UsersService} from \"./Authorized/AuthorizedService\";\r\nimport {DataAccessController} from \"./DataAccess/dataAccessControllers\";\r\nimport {ValuesService} from \"./DataAccess/dataAccessServices\";\r\nimport {PeopleController} from \"./index/indexController\";\r\nimport {PeopleService} from \"./index/indexServices\";\r\nimport {PageSelectorController} from \"./PageSelector/pageSelectorController\";\r\nimport {requestBuffer} from \"./shared/requestBuffer\";\r\nimport {AuthStateService} from \"./shared/authStateService\";\r\nimport {authInterceptor} from \"./shared/authInterceptor\";\r\nimport {AccountService} from \"./shared/accountService\";\r\n\r\nangular.module(\"playground\",\r\n    [\r\n        \"ui.router\",\r\n        \"ngCookies\"\r\n    ])\r\n    //config\r\n    .config(routes)\r\n    .config(httpConfig)\r\n    //account\r\n    .controller(\"accountController\", [\"accountService\", AccountController])\r\n    //authorized\r\n    .controller(\"authorizedController\", [\"usersService\", AuthorizedController])\r\n    .service(\"usersService\", [\"$http\", \"$q\", UsersService])\r\n    //data access\r\n    .controller(\"dataAccessController\", [\"ValuesService\", DataAccessController])\r\n    .service(\"ValuesService\", [\"$http\", \"$q\", ValuesService])\r\n    //index\r\n    .controller(\"peopleController\", [\"peopleService\", PeopleController])\r\n    .service(\"peopleService\", [PeopleService])\r\n    //page selector\r\n    .controller(\"pageSelectorController\", [\"$state\", \"accountService\", PageSelectorController])\r\n    //shared\r\n    .factory('requestBuffer', ['$injector', requestBuffer])\r\n    .service(\"authStateService\", [\"$cookies\", AuthStateService])\r\n    .factory(\"authInterceptor\", [\"$injector\", \"$q\", \"authStateService\", \"requestBuffer\", authInterceptor])\r\n    .service(\"accountService\", [\"$http\", \"$q\", \"authStateService\", \"requestBuffer\", AccountService]);","export function httpConfig($httpProvider) {\r\n    //Enable cross domain calls\r\n    $httpProvider.defaults.useXDomain = true;\r\n    $httpProvider.interceptors.push('authInterceptor');\r\n}","export function routes($stateProvider, $urlRouterProvider) {\r\n    $urlRouterProvider.otherwise(\"/PageSelector\");\r\n    $stateProvider\r\n        .state(\"root\", {\r\n            url: \"/\",\r\n            templateUrl: \"/root.html\"\r\n        })\r\n        .state(\"pageSelector\", {\r\n            url: \"/PageSelector\",\r\n            templateUrl: \"/PageSelector/PageSelector.html\"\r\n        })\r\n        .state(\"pageSelector.index\", {\r\n            url: \"/Index\",\r\n            templateUrl: \"/index/index.html\"\r\n        })\r\n        .state(\"pageSelector.dataAccess\", {\r\n            url: \"/DataAccess\",\r\n            templateUrl: \"/DataAccess/DataAccess.html\"\r\n        })\r\n        .state(\"pageSelector.account\", {\r\n            url: \"/Account\",\r\n            templateUrl: \"/Account/Account.html\"\r\n        })\r\n        .state(\"pageSelector.authorized\", {\r\n            url: \"/Authorized\",\r\n            templateUrl: \"/Authorized/Authorized.html\"\r\n        });\r\n}","class PeopleSortOption {\r\n    constructor(display, property, reverse) {\r\n        this.display = display;\r\n        this.property = property;\r\n        this.reverse = reverse;\r\n    }\r\n}\r\n\r\nexport class PeopleController {\r\n    constructor(peopleService) {\r\n        this.peopleService = peopleService;\r\n        this.people = this.peopleService.getPeople();\r\n        var defaultSortOption = new PeopleSortOption(\"alphabetical\", \"name\", false);\r\n        this.sortOptions = [defaultSortOption, new PeopleSortOption(\"oldest\", \"age\", true)];\r\n        this.sortBy = defaultSortOption;\r\n    }\r\n}","class Person {\r\n    constructor(name, age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n}\r\n\r\nexport class PeopleService {\r\n    constructor() {\r\n        this.people = [new Person(\"Micky\", 26), new Person(\"Paula\", 57), new Person (\"Jimmy\", 23)];\r\n    }\r\n\r\n    getPeople() {\r\n        return this.people;\r\n    }\r\n\r\n    setPeople(people) {\r\n        this.people = people;\r\n    }\r\n}","import {backendConfig} from \"../../serverConfig\";\r\n\r\nexport class AccountService {\r\n    constructor($http, $q, authStateService, requestBuffer) {\r\n        this.$http = $http;\r\n        this.$q = $q;\r\n        this.authStateService = authStateService;\r\n        this.requestBuffer = requestBuffer;\r\n        this.refreshPromise = null;\r\n        this.currentUser = null;\r\n        //prevents infinite recursion when receiving 401 due to lack of role/authorization, rather than lack of authentication\r\n        this.hasRefreshed = false;\r\n    }\r\n\r\n    login(username, password) {\r\n        var deferred = this.$q.defer();\r\n        var request = this.$http({\r\n            url: backendConfig.baseUrl() + \"/token\",\r\n            method: \"POST\",\r\n            data: { grant_type: 'password', username: username, password: password },\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            transformRequest: function(obj) {\r\n                var str = [];\r\n                for(var p in obj)\r\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n                return str.join(\"&\");\r\n            }\r\n        }).then(response => {\r\n            console.log(\"logged in\");\r\n            console.log(response);\r\n            this.hasRefreshed = false;\r\n            this.authStateService.setToken(response.data.userName, response.data.access_token, response.data.refresh_token);\r\n            this.currentUser = new UserViewModel(-1, response.data.userName);\r\n            deferred.resolve();\r\n        }).catch(response => {\r\n            console.log(\"login error\");\r\n            console.log(response);\r\n            deferred.reject(response);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    logout() {\r\n        if (!this.authStateService.hasToken()) return;\r\n        this.authStateService.deleteToken();\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!this.authStateService.hasToken();\r\n    }\r\n\r\n    register(username, password) {\r\n        var deferred = this.$q.defer();\r\n        var request = this.$http({\r\n            url: backendConfig.baseUrl() + \"/api/\" + \"account/register\",\r\n            method: \"POST\",\r\n            data: { Email: username, Password: password, ConfirmPassword: password }\r\n        }).then(response => {\r\n            console.log(\"registered\");\r\n            console.log(response);\r\n            deferred.resolve();\r\n        }).catch(response => {\r\n            console.log(\"register error\");\r\n            console.log(response);\r\n            deferred.reject(response);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    addRole(username, rolename) {\r\n        var deferred = this.$q.defer();\r\n        var request = this.$http({\r\n            url: backendConfig.baseUrl() + \"/api/\" + \"account/addRole\",\r\n            method: \"POST\",\r\n            data: { Email: username, RoleName: rolename }\r\n        }).then(response => {\r\n            console.log(\"added role\");\r\n            console.log(response);\r\n            deferred.resolve();\r\n        }).catch(response => {\r\n            console.log(\"add role error\");\r\n            console.log(response);\r\n            deferred.reject(response);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    removeRole(username, rolename) {\r\n        var deferred = this.$q.defer();\r\n        var request = this.$http({\r\n            url: backendConfig.baseUrl() + \"/api/\" + \"account/removeRole\",\r\n            method: \"POST\",\r\n            data: { Email: username, RoleName: rolename }\r\n        }).then(response => {\r\n            console.log(\"removed role\");\r\n            console.log(response);\r\n            deferred.resolve();\r\n        }).catch(response => {\r\n            console.log(\"remove role error\");\r\n            console.log(response);\r\n            deferred.reject(response);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    getRoles(username) {\r\n        var deferred = this.$q.defer();\r\n        var request = this.$http({\r\n            url: backendConfig.baseUrl() + \"/api/\" + \"account/getRoles\",\r\n            method: \"GET\",\r\n            params: { Email: username }\r\n        }).then(response => {\r\n            console.log(\"got roles\");\r\n            console.log(response);\r\n            deferred.resolve(response.data);\r\n        }).catch(response => {\r\n            console.log(\"get roles error\");\r\n            console.log(response);\r\n            deferred.reject(response);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    refreshToken() {\r\n        if (this.refreshPromise === null) {\r\n            var token = this.authStateService.getToken();\r\n            if (!this.hasRefreshed && token && token.refreshToken) {\r\n                var data = \"grant_type=refresh_token&refresh_token=\" + token.refreshToken;\r\n                var tokenUrl = backendConfig.baseUrl() + '/token';\r\n                var headers = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };\r\n                this.refreshPromise = this.$http.post(tokenUrl, data, headers)\r\n                    .then(response => {\r\n                        console.log(\"refreshSuccessful triggered\");\r\n                        this.hasRefreshed = true;\r\n                        this.authStateService.setToken(response.data.userName, response.data.access_token, response.data.refresh_token);\r\n                        this.refreshPromise = null;\r\n                        this.requestBuffer.retryAll();\r\n                    })\r\n                    .catch(response => {\r\n                        this.refreshPromise = null;\r\n                        this.requestBuffer.rejectAll(\"Token refresh failed.\");\r\n                        this.logout();\r\n                    });\r\n\r\n            } else {\r\n                this.requestBuffer.rejectAll(\"refresh_token missing\");\r\n            }\r\n        }\r\n    }\r\n}","import {backendConfig} from \"../../serverConfig\"\r\n\r\nexport function authInterceptor($injector, $q, authStateService, requestBuffer) {\r\n    var auth = {};\r\n\r\n    auth.isApiRequest = function (config) {\r\n        return config.url.indexOf(backendConfig.baseUrl()) == 0;\r\n    };\r\n\r\n    auth.request = function (config) {\r\n        console.log(\"request made\");\r\n        if (auth.isApiRequest(config)) {\r\n            config.headers = config.headers || {};\r\n            console.log(\"Giving request auth\");\r\n            if (authStateService.hasToken()) {\r\n                var authentication = authStateService.getToken();\r\n                config.headers.Authorization = 'Bearer ' + authentication.accessToken;\r\n                console.log(\"Added auth to request\");\r\n                console.log(config);\r\n            }\r\n            else {\r\n                //explode or something\r\n            }\r\n        }\r\n        return config\r\n    };\r\n\r\n    auth.responseError = function (rejection) {\r\n        console.log(\"handling rejected request\");\r\n        var deferred = $q.defer();\r\n\r\n        if (!auth.hasRefreshed && rejection.status === 401 && auth.isApiRequest(rejection.config)) {\r\n            console.log(\"rejected due to 401\");\r\n            var authService = $injector.get('accountService');\r\n            requestBuffer.append(rejection.config, deferred);\r\n            authService.refreshToken();\r\n        } else {\r\n            /*console.log(\"_responseError reject\");*/\r\n            deferred.reject(rejection);\r\n        }\r\n        /*console.log(\"Deferred.promise for refreshToken\");\r\n         console.log(deferred.promise);*/\r\n        return deferred.promise;\r\n    };\r\n    return auth;\r\n}","export class AuthStateService {\r\n    constructor($cookies) {\r\n        this.$cookies = $cookies;\r\n        this.authCookieName = \"token\";\r\n    }\r\n\r\n    setToken(user, accessToken, refreshToken) {\r\n        var token = new Token(user, accessToken, refreshToken);\r\n        var stringifiedToken = JSON.stringify(token);\r\n        this.$cookies.put(this.authCookieName, stringifiedToken, { domain: frontendConfig.domain });\r\n    }\r\n\r\n    getToken() {\r\n        var jsonEncodedToken = this.$cookies.get(this.authCookieName);\r\n        if (!jsonEncodedToken) return null;\r\n        var token = JSON.parse(jsonEncodedToken);\r\n        return token;\r\n    }\r\n\r\n    hasToken() {\r\n        return !!this.getToken();\r\n    }\r\n\r\n    deleteToken() {\r\n        if (!this.hasToken()) return;\r\n        this.$cookies.put(this.authCookieName, null, { domain: frontendConfig.domain });\r\n    }\r\n}\r\n\r\nclass Token {\r\n    constructor(userName, accessToken, refreshToken) {\r\n        this.userName = userName;\r\n        this.accessToken = accessToken;\r\n        this.refreshToken = refreshToken;\r\n    }\r\n}","export function requestBuffer($injector) {\r\n    var requestBufferServiceFactory = {};\r\n\r\n    var buffer = [];\r\n\r\n    var _append = function(config, deferred) {\r\n        /*console.log(\"_append function triggered\");*/\r\n        return buffer.push({\r\n            config: config,\r\n            deferred: deferred\r\n        });\r\n    };\r\n\r\n    var _retryAll = function(configUpdater) {\r\n        /* console.log(\"_retryAll function triggered\");*/\r\n        var updater = configUpdater || function(config) { return config; };\r\n        for (var i = 0; i < buffer.length; ++i) {\r\n            var _cfg = updater(buffer[i].config);\r\n            if (_cfg !== false)\r\n                _retryHttpRequest(_cfg, buffer[i].deferred);\r\n        }\r\n        buffer = [];\r\n    };\r\n\r\n    var _rejectAll = function(reason) {\r\n        /*console.log(\"_rejectAll function triggered\");*/\r\n        for (var i = 0; i < buffer.length; ++i) {\r\n            buffer[i].deferred.reject(reason || \"\");\r\n        }\r\n        buffer = [];\r\n    };\r\n\r\n    var _retryHttpRequest = function(config, deferred) {\r\n        /*console.log(\"_retryHttpRequest function triggered\");*/\r\n        var $http = $injector.get('$http');\r\n        $http(config).then(function(response) {\r\n            deferred.resolve(response);\r\n        }, function(response) {\r\n            deferred.reject(response);\r\n        });\r\n    };\r\n\r\n    requestBufferServiceFactory.append = _append;\r\n    requestBufferServiceFactory.retryAll = _retryAll;\r\n    requestBufferServiceFactory.rejectAll = _rejectAll;\r\n\r\n    return requestBufferServiceFactory;\r\n}","import {backendConfig} from \"../../serverConfig\";\r\n\r\nexport class RestServiceBase {\r\n    constructor($http, $q, endpoint) {\r\n        this.$http = $http;\r\n        this.$q = $q;\r\n        this.apiUrl = backendConfig.baseUrl() + \"/api/\" + endpoint;\r\n    }\r\n\r\n    /**\r\n     * Converts the parameter api model to a {ViewModelBase}\r\n     * Must be overridden in derived classes\r\n     * @param {ApiModelBase} apiModel\r\n     */\r\n    toViewModel(apiModel) {\r\n        throw new Error(\"Abstract\");\r\n    };\r\n\r\n    /**\r\n     * Converts the parameter api model to a {ViewModelBase}\r\n     * Must be overridden in derived classes\r\n     * @param {ViewModelBase} viewModel\r\n     */\r\n    toApiModel(viewModel) {\r\n        throw new Error(\"Abstract\");\r\n    };\r\n\r\n    /**\r\n     * Issues a GET request to the API, optionally taking a numeric id for a specific item\r\n     * Returns an array of elements, containing all items if no id is passed or just the item with\r\n     * the matching id if an id is passed\r\n     * @param {number=} id\r\n     * @returns {(Promise.<Array.<ViewModelBase>>)}\r\n     */\r\n    get(id = null) {\r\n        var deferred = this.$q.defer();\r\n        var params = id ? {id: id} : {};\r\n        this.$http.get(this.apiUrl, {params: params})\r\n            .then((response) => {\r\n                console.log(\"GET received\");\r\n                console.log(response);\r\n                var responseIsEnumerable = Object.prototype.toString.call(response.data) === \"[object Array]\";\r\n                var enumerableData = responseIsEnumerable ? response.data : [response.data];\r\n                var convertedData = enumerableData.map(this.toViewModel);\r\n                console.log(\"converted\");\r\n                console.log(convertedData);\r\n                deferred.resolve(convertedData);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"data service error\");\r\n                console.log(error);\r\n                deferred.reject(error);\r\n            });\r\n        return deferred.promise;\r\n    };\r\n\r\n    /**\r\n     * Issues a POST request to the API for the parameter view model\r\n     * This should cause the server to add the parameter view model to its list of entities\r\n     * @param {ViewModelBase} viewModel\r\n     * @returns {(Promise.<ViewModelBase>)}\r\n     */\r\n    post(viewModel) {\r\n        var deferred = this.$q.defer();\r\n        var apiModel = this.toApiModel(viewModel);\r\n        this.$http.post(this.apiUrl, {data: apiModel})\r\n            .then((response) => {\r\n                var converted = this.toViewModel(response.data);\r\n                deferred.resolve(converted);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"data service error\");\r\n                console.log(error);\r\n                deferred.reject(error);\r\n            });\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Issues a PUT request to the API with the id of the parameter view model, passing the view model\r\n     * This should cause the server to update the value of the entity with a matching id to the values present\r\n     * in the parameter view model\r\n     * @param {ViewModelBase} viewModel\r\n     * @returns {(Promise.<ViewModelBase>)}\r\n     */\r\n    put(viewModel){\r\n        var deferred = this.$q.defer();\r\n        var apiModel = this.toApiModel(viewModel);\r\n        this.$http.put(this.apiUrl, {params: {id: apiModel.id}, data: apiModel})\r\n            .then((response) => {\r\n                var converted = this.toViewModel(response.data);\r\n                deferred.resolve(converted);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"data service error\");\r\n                console.log(error);\r\n                deferred.reject(error);\r\n            });\r\n        return deferred.promise;\r\n    }\r\n\r\n    //this is a keyword in js so perhaps best avoided, but given that Google's $http object is using it, I will too\r\n    /**\r\n     * Issues a DELETE request to the API with the id of the parameter view model\r\n     * This should cause the server to delete the entity with a matching id\r\n     * @param {ViewModelBase} viewModel\r\n     * @returns {Promise}\r\n     */\r\n    delete(viewModel){\r\n        var deferred = this.$q.defer();\r\n        var apiModel = this.toApiModel(viewModel);\r\n        this.$http.delete(this.apiUrl, {params: {id: apiModel.id}})\r\n            .then((response) => {\r\n                deferred.resolve();\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"data service error\");\r\n                console.log(error);\r\n                deferred.reject(error);\r\n            });\r\n        return deferred.promise;\r\n    }\r\n}\r\n\r\nexport class ApiModelBase {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n}\r\n\r\nexport class ViewModelBase {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n}"]}